✅ Excellent! This confirms that Rancher is fully functional and serving traffic correctly on port 8443 inside the container, and your Kubernetes Service is correctly routing it from Service Port 443 → Target Port 444 → Container Port 8443.

Now let’s ensure that your Traefik Ingress is configured correctly to forward HTTPS traffic to Rancher’s internal service — so external clients like browsers or curl https://192.168.91.172.nip.io get a valid response.


---

✅ Step-by-Step: Fix Your Rancher Ingress for Traefik

Here is the correct working Ingress YAML to match your setup:

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rancher
  namespace: cattle-system
  annotations:
    traefik.ingress.kubernetes.io/service.serverscheme: https
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: traefik
  rules:
    - host: 192.168.91.172.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rancher
                port:
                  number: 443
  tls:
    - hosts:
        - 192.168.91.172.nip.io

> 🔁 Explanation:

service.serverscheme: https tells Traefik to use HTTPS when proxying to your backend Rancher service.

Your Rancher service is:

Exposed as ClusterIP

Port 443 → targetPort: 444 (inside container is listening on 8443, confirmed).






---

✅ Apply This Ingress Cleanly

If you’ve previously applied a conflicting version, run:

kubectl delete ingress rancher -n cattle-system
kubectl apply -f rancher-ingress.yaml


---

🔍 Test Again from Outside

curl -vk https://192.168.91.172.nip.io

✅ You should now get HTTP/2 200 or HTML response from Rancher UI — instead of 502.


---

Bonus: Access Rancher Web UI

Open a browser and visit:

https://192.168.91.172.nip.io

It may warn about self-signed cert, just proceed to Rancher.


---

If you’d like, I can also generate a complete working rancher-ingress.yaml for copy-paste. Let me know!
